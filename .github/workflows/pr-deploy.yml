name: Build & Deploy App

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-2

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::597088023258:role/github-deploy-role

    - name: Get Account ID
      id: acct
      run: echo "account_id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

    - name: Log in to ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION \
        | docker login \
            --username AWS \
            --password-stdin ${{ steps.acct.outputs.account_id }}.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build & push backend
      working-directory: backend
      run: |
        REPO_URI="${{ steps.acct.outputs.account_id }}.dkr.ecr.$AWS_REGION.amazonaws.com/savvynote-backend"
        docker build -t $REPO_URI:latest .
        docker push $REPO_URI:latest

    - name: Build & push frontend
      working-directory: frontend
      run: |
        REPO_URI="${{ steps.acct.outputs.account_id }}.dkr.ecr.$AWS_REGION.amazonaws.com/savvynote-frontend"
        docker build \
          --build-arg NEXT_PUBLIC_API_URL=https://savvy-note.com/api \
          --build-arg NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }} \
          -t $REPO_URI:latest .
        docker push $REPO_URI:latest

    - name: Trigger container update via SSM
      if: github.ref == 'refs/heads/main'
      run: |
        INSTANCE_IDS=$(aws ec2 describe-instances \
          --filters "Name=tag:Role,Values=frontend" "Name=instance-state-name,Values=running" \
          --query "Reservations[].Instances[].InstanceId" --output text)

        aws ssm send-command \
          --region $AWS_REGION \
          --instance-ids $INSTANCE_IDS \
          --document-name AWS-RunShellScript \
          --parameters commands=["docker pull $REPO_URI:latest","docker rm -f savvynote-frontend || true","docker run -d --name savvynote-frontend -p 3000:3000 $REPO_URI:latest"] \
          --timeout-seconds 600
